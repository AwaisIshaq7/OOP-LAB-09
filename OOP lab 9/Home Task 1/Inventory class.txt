package javaone;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class BookInventorySystem {

    private List<Book> inventory;
    private final String fileName = "inventory.txt"; // Name of the file to store inventory data

    public BookInventorySystem() {
        inventory = new ArrayList<>();
        loadInventoryFromFile(); // Load inventory data from file during application startup
    }

    // Method to add a new book to the inventory
    public void addBook(Book book) {
        inventory.add(book);
    }

    // Method to remove a book from the inventory
    public boolean removeBook(String title) {
        for (Book book : inventory) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                inventory.remove(book);
                return true;
            }
        }
        return false;
    }

    // Method to update details of a book in the inventory
    public boolean updateBook(String title, Book updatedBook) {
        for (int i = 0; i < inventory.size(); i++) {
            if (inventory.get(i).getTitle().equalsIgnoreCase(title)) {
                inventory.set(i, updatedBook);
                return true;
            }
        }
        return false;
    }

    // Method to search for books by title or author
    public List<Book> searchBook(String keyword) {
        List<Book> searchResults = new ArrayList<>();
        for (Book book : inventory) {
            if (book.getTitle().toLowerCase().contains(keyword.toLowerCase()) ||
                    book.getAuthor().toLowerCase().contains(keyword.toLowerCase())) {
                searchResults.add(book);
            }
        }
        return searchResults;
    }

    // Method to load inventory data from file during application startup
    private void loadInventoryFromFile() {
        try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 4) {
                    String title = parts[0];
                    String author = parts[1];
                    double price = Double.parseDouble(parts[2]);
                    int quantity = Integer.parseInt(parts[3]);
                    inventory.add(new Book(title, author, price, quantity));
                }
            }
        } catch (IOException e) {
            // Handle file IO exception
            e.printStackTrace();
        }
    }

    // Method to save updated inventory data back to the file when the application exits
    public void saveInventoryToFile() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName))) {
            for (Book book : inventory) {
                writer.write(book.getTitle() + "," + book.getAuthor() + "," + book.getPrice() + "," + book.getQuantity());
                writer.newLine();
            }
        } catch (IOException e) {
            // Handle file IO exception
            e.printStackTrace();
        }
    }

    // Method to be called when the application exits to save inventory data to the file
    public void exit() {
        saveInventoryToFile();
    }

    public static void main(String[] args) {
        // Create an instance of BookInventorySystem
        BookInventorySystem inventorySystem = new BookInventorySystem();

        // Add some books to the inventory
        inventorySystem.addBook(new Book("Title 1", "Author 1", 10.99, 5));
        inventorySystem.addBook(new Book("Title 2", "Author 2", 8.50, 7));
        inventorySystem.addBook(new Book("Title 3", "Author 3", 12.75, 3));

        // Search for books by title or author
        List<Book> searchResults = inventorySystem.searchBook("Title");
        System.out.println("Search Results:");
        for (Book book : searchResults) {
            System.out.println(book);
        }

        // Remove a book from the inventory
        boolean removed = inventorySystem.removeBook("Title 2");
        if (removed) {
            System.out.println("Book removed successfully.");
        } else {
            System.out.println("Book not found in inventory.");
        }

        // Call exit() method to save inventory data to file before exiting the application
        inventorySystem.exit();
    }
}
